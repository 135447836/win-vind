name: auto release

on:
  push:
    tags:
      - v*.*.*

jobs:
  x64-and-x86:
    runs-on: windows-latest

    defaults:
      run:
        shell: powershell

    steps:
    - uses: actions/checkout@v2

    - name: Install dpendencies
      run: |
        choco install -y nsis
        choco install -y checksum

    - name: Get the version
      id: version
      run: |
        $TAG=$($(echo ${{github.ref}}).Replace('refs/tags/v', ''))
        echo "::set-output name=VERSION::$TAG"

    - name: Setup x64 MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Cache x64 libraries
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/libs
        key: x64-libs-cache-220120

    - name: Build x64 assets
      run: ./tools/create_assets.bat ${{steps.version.outputs.VERSION}} -msvc 64

    - name: Setup x86 MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Cache x86 libraries
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/libs
        key: x86-libs-cache-220120

    - name: Build x86 assets
      run: ./tools/create_assets.bat ${{steps.version.outputs.VERSION}} -msvc 32

    - name: (Chocolatey) Setup API
      run: choco apikey --key ${{secrets.CHOCOLATEY_API_KEY}} --source https://push.chocolatey.org/

    - name: (Chocolatey) Create installer
      run: ./tools/create_chocolatey_installer.bat ${{steps.version.outputs.VERSION}}

    - name: (Chocolatey) Package the installer as nupkg and push the package into chocolatey.org
      run: ./tools/push_chocolatey_package.bat ${{steps.version.outputs.VERSION}}

    - name: (GitHub) Create release and submit assets
      uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        files: |
          bin_64/*.zip
          bin_64/*.exe
          bin_32/*.zip
          bin_32/*.exe
          choco/*.zip

    - name: (winget) Get winget-create
      run: iwr https://aka.ms/wingetcreate/latest -OutFile wingetcreate.exe

    - name: (winget) Update the manifest and submit
      run: |
        $VERSION="${{steps.version.outputs.VERSION}}"
        $WINGET_PACK_32="https://github.com/pit-ray/win-vind/releases/download/v${VERSION}/setup_win-vind_${VERSION}_32bit.exe"
        $WINGET_PACK_64="https://github.com/pit-ray/win-vind/releases/download/v${VERSION}/setup_win-vind_${VERSION}_64bit.exe"
        ./wingetcreate.exe update -u $WINGET_PACK_32 $WINGET_PACK_64 -v $VERSION -t ${{secrets.WINGET_GITHUB_TOKEN}} -s pit-ray.win-vind
